[Script Info]
ScriptType: v4.00+
PlayResX: 1920
PlayResY: 1080
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.709
Original Script: 極彩花夢
Language: CHS_JPN

[Aegisub Project Garbage]
Video File: ?dummy:24000/1001:40000:1920:1080:127:127:127:c
Video AR Value: 1.777778
Video Zoom Percent: 0.625000

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Ex-KSY,方正筑紫明朝宋 简繁,60,&H00FFFFFF,&H00FFFFFF,&H00FFFFFF,&H00FFFFFF,0,0,0,0,100,100,0,0,1,0,0,7,0,0,0,1
Style: Ex-invisible,方正筑紫明朝宋 简繁,60,&H00FFFFFF,&H00FFFFFF,&H00FFFFFF,&H00FFFFFF,0,0,0,0,100,100,0,0,1,0,0,7,0,0,0,1
Style: Ex-effects,方正筑紫明朝宋 简繁,60,&H00FFFFFF,&H00FFFFFF,&H00FFFFFF,&H00FFFFFF,0,0,0,0,100,100,0,0,1,0,0,7,0,0,0,1
Style: Sx-zh,方正兰亭圆_GBK_中,66,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H64000000,0,0,0,0,100,100,0,0,1,2.42,0,2,0,0,74,1
Style: Sx-jp,A-OTF Shin Maru Go Pr6N DB,68,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H64000000,0,0,0,0,99,100,0.5,0,1,2.42,0,2,0,0,18,128
Style: Rx-annotation,方正悠宋+ GBK 509R,40,&H1E000000,&H00FFFFFF,&H1EFFFFFF,&H50FFFFFF,0,0,0,0,96,100,0,0,3,1,0,7,25,25,25,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— 字幕说明 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-KSY,AME,0,0,0,,本字幕由「極彩花夢」制作。
Comment: 0,0:00:00.00,0:00:00.00,Ex-KSY,AME,0,0,0,,字幕作品仅供交流学习使用，请勿用于商业用途。
Comment: 0,0:00:00.00,0:00:00.00,Ex-KSY,AME,0,0,0,,您可以自由转载，但请勿修改任何字幕内容。
Comment: 0,0:00:00.00,0:00:00.00,Ex-KSY,AME,0,0,0,,联系邮箱: kyokusaisub@gmail.com
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— 字幕说明 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— EX - 字幕组署名 ——
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,背景,0,0,0,,{\an7\p1\fscx4600\fscy2200\pos(1600,770)\xbord4\blur4\alpha&&H10&\fad(0,600)}m -5 -5 l -5 5 l 5 5 l 5 -5 l -5 -5
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,装饰,0,0,0,,{\an7\p1\fscx36\fscy36\pos(1600,620)\1c&H000000&\bord1\blur2\fad(0,600)}m 0 0 b -1 14 -2 19 -5 22 b -2 24 -1 27 0 32 b 1 27 2 24 5 22 b 2 19 1 14 0 0 m -16 20 b -13 26 -12 30 -13 33 b -11 33 -8 33 -6 34 l -16 20 m 16 20 b 13 26 12 30 13 33 b 11 33 8 33 6 34 l 16 20 m 0 36 l 0 36 l -2 38 l 0 40 l 2 38 l 0 36 m 0 43 l -8 59 l -25 61 l -13 75 l -15 91 l 0 83 l 15 91 l 13 75 l 25 61 l 8 59 l 0 43 m 0 119 b -6 108 -28 109 -47 119 b -51 114 -56 112 -65 111 b -64 110 -63 108 -63 107 b -36 105 -21 92 -21 77 b -21 67 -41 54 -50 76 l -48 77 b -40 60 -25 68 -25 78 b -25 93 -44 103 -63 104 b -66 83 -125 65 -183 84 b -246 66 -269 91 -269 104 b -269 113 -264 124 -243 121 l -244 119 b -256 121 -266 115 -266 106 b -266 93 -243 70 -187 86 b -211 95 -221 109 -219 114 b -218 108 -206 95 -181 88 b -171 92 -148 99 -140 101 b -146 106 -145 113 -139 114 b -143 111 -143 105 -135 102 b -131 103 -126 104 -122 105 b -118 106 -114 109 -113 111 b -113 109 -113 107 -114 106 b -94 110 -77 109 -67 108 b -67 110 -70 113 -73 114 b -70 114 -67 113 -66 113 b -59 113 -52 116 -50 120 b -70 129 -85 128 -98 120 l -98 122 b -85 130 -70 132 -48 122 b -29 137 -6 139 0 128 m -2 124 b -2 137 -31 133 -45 121 b -31 113 -2 109 -2 124 m -67 105 b -90 109 -135 102 -176 86 b -122 72 -72 85 -67 105 m 0 119 b 6 108 28 109 47 119 b 51 114 56 112 65 111 b 64 110 63 108 63 107 b 36 105 21 92 21 77 b 21 67 41 54 50 76 l 48 77 b 40 60 25 68 25 78 b 25 93 44 103 63 104 b 66 83 125 65 183 84 b 246 66 269 91 269 104 b 269 113 264 124 243 121 l 244 119 b 256 121 266 115 266 106 b 266 93 243 70 187 86 b 211 95 221 109 219 114 b 218 108 206 95 181 88 b 171 92 148 99 140 101 b 146 106 145 113 139 114 b 143 111 143 105 135 102 b 131 103 126 104 122 105 b 118 106 114 109 113 111 b 113 109 113 107 114 106 b 94 110 77 109 67 108 b 67 110 70 113 73 114 b 70 114 67 113 66 113 b 59 113 52 116 50 120 b 70 129 85 128 98 120 l 98 122 b 85 130 70 132 48 122 b 29 137 6 139 0 128 m 2 124 b 2 137 31 133 45 121 b 31 113 2 109 2 124 m 67 105 b 90 109 135 102 176 86 b 122 72 72 85 67 105 m -276 104 l -276 106 l -584 106 l -586 105 l -584 104 m -591 105 l -595 99 l -604 99 l -611 105 l -604 111 l -595 111 m -616 105 b -616 102 -618 100 -621 100 b -624 100 -626 102 -626 105 b -626 108 -624 110 -621 110 b -618 110 -616 108 -616 105 m -630 105 b -630 102 -632 100 -635 100 b -638 100 -640 102 -640 105 b -640 108 -638 110 -635 110 b -632 110 -630 108 -630 105 m -645 105 l -655 96 l -670 96 l -675 105 l -670 114 l -655 114 m 276 104 l 276 106 l 584 106 l 586 105 l 584 104 m 591 105 l 595 99 l 604 99 l 611 105 l 604 111 l 595 111 m 616 105 b 616 102 618 100 621 100 b 624 100 626 102 626 105 b 626 108 624 110 621 110 b 618 110 616 108 616 105 m 630 105 b 630 102 632 100 635 100 b 638 100 640 102 640 105 b 640 108 638 110 635 110 b 632 110 630 108 630 105 m 645 105 l 655 96 l 670 96 l 675 105 l 670 114 l 655 114
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,装饰,0,0,0,,{\org(1600,770)\frz-180}{\an7\p1\fscx36\fscy36\pos(1600,620)\1c&H000000&\bord1\blur2\fad(0,600)}m 0 0 b -1 14 -2 19 -5 22 b -2 24 -1 27 0 32 b 1 27 2 24 5 22 b 2 19 1 14 0 0 m -16 20 b -13 26 -12 30 -13 33 b -11 33 -8 33 -6 34 l -16 20 m 16 20 b 13 26 12 30 13 33 b 11 33 8 33 6 34 l 16 20 m 0 36 l 0 36 l -2 38 l 0 40 l 2 38 l 0 36 m 0 43 l -8 59 l -25 61 l -13 75 l -15 91 l 0 83 l 15 91 l 13 75 l 25 61 l 8 59 l 0 43 m 0 119 b -6 108 -28 109 -47 119 b -51 114 -56 112 -65 111 b -64 110 -63 108 -63 107 b -36 105 -21 92 -21 77 b -21 67 -41 54 -50 76 l -48 77 b -40 60 -25 68 -25 78 b -25 93 -44 103 -63 104 b -66 83 -125 65 -183 84 b -246 66 -269 91 -269 104 b -269 113 -264 124 -243 121 l -244 119 b -256 121 -266 115 -266 106 b -266 93 -243 70 -187 86 b -211 95 -221 109 -219 114 b -218 108 -206 95 -181 88 b -171 92 -148 99 -140 101 b -146 106 -145 113 -139 114 b -143 111 -143 105 -135 102 b -131 103 -126 104 -122 105 b -118 106 -114 109 -113 111 b -113 109 -113 107 -114 106 b -94 110 -77 109 -67 108 b -67 110 -70 113 -73 114 b -70 114 -67 113 -66 113 b -59 113 -52 116 -50 120 b -70 129 -85 128 -98 120 l -98 122 b -85 130 -70 132 -48 122 b -29 137 -6 139 0 128 m -2 124 b -2 137 -31 133 -45 121 b -31 113 -2 109 -2 124 m -67 105 b -90 109 -135 102 -176 86 b -122 72 -72 85 -67 105 m 0 119 b 6 108 28 109 47 119 b 51 114 56 112 65 111 b 64 110 63 108 63 107 b 36 105 21 92 21 77 b 21 67 41 54 50 76 l 48 77 b 40 60 25 68 25 78 b 25 93 44 103 63 104 b 66 83 125 65 183 84 b 246 66 269 91 269 104 b 269 113 264 124 243 121 l 244 119 b 256 121 266 115 266 106 b 266 93 243 70 187 86 b 211 95 221 109 219 114 b 218 108 206 95 181 88 b 171 92 148 99 140 101 b 146 106 145 113 139 114 b 143 111 143 105 135 102 b 131 103 126 104 122 105 b 118 106 114 109 113 111 b 113 109 113 107 114 106 b 94 110 77 109 67 108 b 67 110 70 113 73 114 b 70 114 67 113 66 113 b 59 113 52 116 50 120 b 70 129 85 128 98 120 l 98 122 b 85 130 70 132 48 122 b 29 137 6 139 0 128 m 2 124 b 2 137 31 133 45 121 b 31 113 2 109 2 124 m 67 105 b 90 109 135 102 176 86 b 122 72 72 85 67 105 m -276 104 l -276 106 l -584 106 l -586 105 l -584 104 m -591 105 l -595 99 l -604 99 l -611 105 l -604 111 l -595 111 m -616 105 b -616 102 -618 100 -621 100 b -624 100 -626 102 -626 105 b -626 108 -624 110 -621 110 b -618 110 -616 108 -616 105 m -630 105 b -630 102 -632 100 -635 100 b -638 100 -640 102 -640 105 b -640 108 -638 110 -635 110 b -632 110 -630 108 -630 105 m -645 105 l -655 96 l -670 96 l -675 105 l -670 114 l -655 114 m 276 104 l 276 106 l 584 106 l 586 105 l 584 104 m 591 105 l 595 99 l 604 99 l 611 105 l 604 111 l 595 111 m 616 105 b 616 102 618 100 621 100 b 624 100 626 102 626 105 b 626 108 624 110 621 110 b 618 110 616 108 616 105 m 630 105 b 630 102 632 100 635 100 b 638 100 640 102 640 105 b 640 108 638 110 635 110 b 632 110 630 108 630 105 m 645 105 l 655 96 l 670 96 l 675 105 l 670 114 l 655 114
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,看板娘,0,0,0,,{\an7\p1\1c&H8752F4&\pos(1450,770)\fscx36\fscy36\fad(0,600)}m 119.02 -1.9 bm 87.24 -5.69 b 86.31 -8.75 85.23 -11.66 83.97 -14.51 82.17 -18.57 80.42 -22.66 78.61 -26.73 76.43 -31.64 74.46 -36.65 72.61 -41.69 71.19 -45.55 69.69 -49.38 68.61 -53.36 67.56 -57.26 66.32 -61.11 65.15 -64.99 65.03 -65.39 65.09 -65.96 64.24 -65.99 63.99 -64.36 63.02 -62.9 63.08 -61.12 63.14 -59.26 62.97 -57.39 63.12 -55.54 63.33 -52.77 63.68 -50.01 64.58 -47.37 65.1 -45.85 65.45 -44.32 65.47 -42.72 65.49 -40.45 65.47 -38.19 65.47 -35.93 65.47 -35.34 65.36 -34.72 65.79 -34.21 67.71 -31.9 68.04 -29.04 68.71 -26.27 69.12 -24.56 69.65 -22.89 71.09 -21.6 72.42 -20.42 73.53 -18.97 74.61 -17.55 77.01 -14.36 79.47 -11.24 82.72 -8.86 84.2 -7.78 85.49 -6.43 87.24 -5.69 m -25.78 -166.67 b -25.81 -166.71 -25.84 -166.76 -25.87 -166.8 -25.91 -166.77 -25.98 -166.73 -25.99 -166.69 -26.01 -166.54 -25.94 -166.47 -25.83 -166.52 -25.8 -166.54 -25.79 -166.62 -25.78 -166.67 m -25.39 -165.43 b -25.41 -165.49 -25.44 -165.54 -25.47 -165.59 -25.5 -165.55 -25.56 -165.5 -25.56 -165.45 -25.57 -165.4 -25.52 -165.35 -25.49 -165.3 -25.46 -165.34 -25.42 -165.39 -25.39 -165.43 m -110.46 -94.71 b -110.72 -93.54 -111.07 -92.37 -110.84 -91.15 -112.58 -91.45 -114.34 -91.69 -116.07 -92.08 -117.21 -92.34 -117.29 -92.9 -116.56 -93.8 -115.54 -95.05 -114.5 -95.96 -112.73 -95.12 -112.06 -94.8 -111.15 -95.3 -110.46 -94.71 m 55.03 -164.34 b 55.37 -162.34 54.66 -160.43 54.17 -158.52 53.65 -156.48 51.97 -155.21 50.47 -153.92 49.36 -152.97 48.27 -152.01 47.21 -150.99 46.28 -150.1 45.22 -149.44 43.96 -149.13 42.64 -148.81 42.27 -149.09 42.28 -150.48 42.3 -153.07 42.82 -155.61 43.23 -158.16 43.5 -159.85 43.87 -161.57 43.85 -163.27 43.83 -167.23 46.08 -169.83 48.88 -172.07 50.56 -173.41 52.49 -172.83 53.54 -170.87 54.62 -168.86 55.34 -166.73 55.03 -164.34
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,看板娘,0,0,0,,{\an7\p1\1c&HBFA4FD&\pos(1450,770)\fscx36\fscy36\fad(0,600)}m 74.3 -107.48 b 73.5 -107.48 72.7 -107.48 71.9 -107.46 69.72 -107.4 67.54 -107.55 65.35 -107.12 63.02 -106.66 60.59 -106.7 58.28 -106.19 56.66 -105.83 55.08 -105.21 53.41 -105.47 50.17 -105.97 46.91 -105.65 43.67 -105.91 42.17 -106.03 40.7 -106.56 39.28 -107.13 38.11 -107.59 37.84 -107.45 37.9 -106.16 38.01 -103.58 37.73 -100.99 38.2 -98.4 38.55 -96.46 38.39 -94.44 38.64 -92.45 39.17 -88.12 39.46 -83.76 39.93 -79.42 40.13 -77.56 41.06 -75.9 41.63 -74.13 41.78 -73.67 42.15 -73.35 42.59 -73.17 45.24 -72.1 47.58 -70.51 49.99 -68.99 51.69 -67.92 53.47 -66.9 55.19 -65.83 57.43 -64.45 59.26 -62.64 60.62 -60.39 60.94 -59.86 61.35 -59.45 61.75 -59.01 62.15 -58.58 62.7 -58.23 62.61 -57.36 61.53 -57.61 60.8 -58.3 60.12 -59.04 58.13 -61.21 55.83 -63.06 53.28 -64.45 50.74 -65.85 48.23 -67.47 45.39 -68.21 41.11 -69.32 38.87 -72.46 37.06 -76.11 35.36 -79.55 34.77 -83.26 34.23 -87.02 33.5 -92.14 32.93 -97.26 32.61 -102.42 32.49 -104.27 32.16 -106.14 32.34 -107.98 32.71 -111.82 32.42 -115.7 32.78 -119.52 33.11 -122.94 33.3 -126.38 33.72 -129.8 34.2 -133.66 34.8 -137.53 35.16 -141.42 35.46 -144.63 36.17 -147.81 36.56 -151.05 35.09 -149.52 34.37 -147.62 33.91 -145.61 33.49 -143.8 32.82 -142.08 32.25 -140.32 31.68 -138.58 31.11 -136.81 31.1 -134.93 31.1 -134.21 31.1 -133.48 30.95 -132.74 30.51 -133.86 30.82 -135.08 30.39 -136.21 29.94 -137.42 30.67 -138.66 30.43 -139.93 28.94 -136.36 28.51 -132.56 28.09 -128.75 27.51 -134.37 28.19 -139.83 30.37 -145.12 28.86 -145.29 28.52 -143.7 27.44 -143.56 27.19 -143.83 27.21 -144.03 27.34 -144.19 31.31 -149.11 33.32 -154.96 34.92 -160.93 35.56 -163.32 36.18 -165.83 35.91 -168.39 35.79 -169.47 36.21 -170.48 36.33 -171.54 36.71 -175.06 36.04 -178.52 35.89 -182.01 35.86 -182.58 35.69 -183.04 35.3 -183.44 34.71 -184.06 34.13 -184.68 33.27 -185.6 32.88 -183.14 34.77 -181.45 34.53 -179.26 33.58 -179.8 34 -180.86 33.5 -181.52 32.99 -182.2 32.73 -183.06 32.35 -183.84 30.97 -186.69 29.34 -189.33 26.99 -191.57 24.83 -193.63 22.51 -195.46 20.2 -197.32 19.94 -197.53 19.7 -197.77 19.06 -197.55 19.67 -195.47 20.81 -193.62 21.77 -191.71 22.76 -189.75 23.63 -187.74 24.83 -185.89 26.02 -184.08 27.89 -182.82 28.98 -180.84 27.82 -180.39 26.97 -180.76 26.23 -181.35 23.58 -183.44 20.87 -185.49 18.99 -188.38 18.82 -188.65 18.58 -188.9 18.32 -189.1 18.19 -189.21 17.92 -189.26 17.79 -189.19 17.66 -189.12 17.51 -188.81 17.57 -188.71 17.94 -188.02 17.93 -187.22 18.38 -186.51 19.24 -185.15 20.12 -183.74 20.58 -182.11 19.79 -181.9 19.5 -182.42 19.24 -182.83 18.33 -184.29 17.38 -185.75 16.59 -187.28 15.5 -189.4 14.27 -191.44 12.98 -193.51 12.8 -192.32 12.98 -191.65 13.93 -189.3 14.51 -187.88 14.96 -186.42 15.56 -185.02 16.17 -183.61 16.85 -182.24 17.59 -180.89 18.31 -179.57 19.13 -178.3 19.93 -176.96 18.28 -176.56 18.28 -176.56 16.68 -177.94 16.26 -178.02 16.3 -177.67 16.28 -177.44 16.18 -176.55 15.71 -176.55 15.29 -177.13 14.58 -178.09 13.9 -179.09 13.39 -180.16 12.36 -182.32 11.22 -184.42 10.58 -186.75 10.41 -187.37 10.01 -187.92 9.65 -188.62 8.9 -188 9.15 -187.37 9.25 -186.75 9.74 -183.86 10.9 -181.17 11.65 -178.36 11.82 -177.74 12.02 -177.13 12.02 -176.42 10.42 -177.45 10.26 -179.49 8.95 -180.91 8.33 -179.57 9.09 -178.49 9.18 -177.38 9.2 -177.12 9.4 -176.88 9.43 -176.62 9.52 -175.88 10.42 -175 9.56 -174.44 8.74 -173.92 7.59 -174 6.7 -174.54 5.29 -175.39 4.46 -176.76 3.85 -178.26 2.92 -180.54 2.2 -182.88 1.85 -185.32 1.81 -185.58 1.7 -185.84 1.39 -185.91 0.99 -184.1 2.14 -176.87 3.65 -171.87 2.29 -171.87 0.97 -171.72 -0.31 -171.91 -1.77 -172.13 -3 -172.86 -3.92 -174.15 -5.25 -175.99 -6.18 -178.04 -7.24 -180.24 -8.3 -178.54 -7.09 -176.94 -7.45 -174.97 -10.15 -180.73 -11.23 -186.56 -12.84 -192.26 -12.77 -190.01 -13.11 -187.78 -12.62 -185.52 -12.24 -183.78 -12.6 -181.96 -12.14 -180.18 -11.94 -179.43 -11.9 -178.63 -11.54 -177.9 -11.21 -177.23 -11.26 -176.54 -11.4 -175.44 -13.93 -180.11 -14.81 -184.91 -16.03 -189.62 -17.02 -187.36 -15.88 -185.12 -16.08 -182.88 -16.31 -180.48 -15.76 -178.15 -15.34 -175.79 -14.93 -173.53 -13.61 -171.57 -13.27 -169 -16.03 -170.24 -16.62 -172.7 -17.57 -174.89 -18.26 -174.57 -18.15 -174 -18.02 -173.65 -17.63 -172.63 -17.83 -171.53 -17.45 -170.52 -17.26 -170.01 -17.16 -169.47 -17.67 -169.06 -17.97 -168.82 -18.13 -168.51 -18 -168.19 -17.49 -166.9 -18.25 -166.74 -19.25 -166.62 -22.3 -166.24 -23.37 -166.76 -24.99 -169.65 -25.8 -171.1 -26.55 -172.59 -26.9 -174.24 -26.95 -174.48 -26.94 -174.79 -27.48 -174.81 -27.59 -172.36 -26.52 -170.08 -26.48 -167.65 -28.75 -171.75 -29.13 -176.39 -30.22 -180.79 -30.99 -180.82 -30.92 -180.28 -30.81 -179.97 -30.37 -178.67 -30.51 -177.34 -30.5 -176.02 -30.44 -171.63 -30.21 -167.27 -29.35 -162.96 -29.34 -162.89 -29.31 -162.82 -29.32 -162.76 -29.78 -160.13 -28.24 -158.29 -26.93 -156.27 -24.18 -152.04 -21.3 -147.88 -19.03 -143.36 -17.87 -141.05 -16.92 -138.62 -15.63 -136.39 -14.38 -134.24 -12.53 -132.53 -10.3 -131.42 -6.99 -129.76 -3.65 -128.16 0.02 -127.29 2.78 -126.64 5.42 -125.46 8.11 -124.51 8.96 -124.21 9.43 -123.56 9.46 -122.71 9.55 -120.52 10.15 -118.37 9.92 -116.17 9.88 -115.84 9.92 -115.5 9.86 -115.17 9.58 -113.67 9.32 -113.49 7.76 -113.43 5.29 -113.32 2.87 -113.69 0.45 -114.11 -0.46 -114.26 -1.41 -114.25 -2.34 -114.22 -6.28 -114.12 -10.11 -114.84 -13.97 -115.51 -18.16 -116.25 -22.36 -116.2 -26.54 -114.7 -31.14 -113.05 -33.47 -109.58 -35.09 -105.4 -36.65 -101.37 -37.45 -97.16 -37.75 -92.81 -38.04 -88.53 -39.04 -84.28 -39.14 -80 -39.21 -76.85 -40.33 -74.95 -42.82 -73.12 -45.25 -71.35 -47.4 -69.07 -49.22 -66.58 -49.6 -66.06 -50.02 -65.48 -50.78 -65.44 -50.01 -69.63 -49.26 -73.82 -48.45 -78.01 -47.74 -81.62 -46.93 -85.21 -46.22 -88.81 -45.46 -92.67 -44.78 -96.55 -44.04 -100.42 -43.44 -103.5 -42.81 -106.57 -42.16 -109.64 -42.06 -110.11 -41.91 -110.58 -42.04 -111.02 -42.56 -112.91 -42.08 -114.97 -43.07 -116.79 -43.24 -117.1 -43.23 -117.58 -43.14 -117.95 -42.5 -120.63 -42.94 -123.37 -42.58 -126.09 -42.18 -129.04 -41.83 -132.01 -41.49 -134.97 -41.14 -138.09 -41.42 -141.22 -41.25 -144.34 -42.22 -145.63 -41.18 -146.92 -41.25 -148.22 -41.39 -150.79 -41.57 -153.34 -42.06 -155.89 -42.62 -158.75 -42.73 -161.69 -43.26 -164.55 -44.11 -169.16 -44.54 -173.8 -44.95 -178.46 -45.35 -182.92 -45.42 -187.37 -45.2 -191.81 -45.03 -195.22 -44.68 -198.61 -43.89 -201.98 -42.94 -206.02 -41.86 -210.01 -40.58 -213.94 -39.78 -216.42 -38.95 -219.01 -37.23 -221 -33.83 -224.95 -30.87 -229.24 -27.13 -232.92 -22.55 -237.41 -17.05 -239.72 -10.83 -240.58 -8.67 -240.88 -6.59 -241.2 -4.51 -242.06 -1.32 -243.37 2.08 -244.09 5.57 -244.27 11.57 -244.58 17.5 -244.22 23.32 -242.62 27.78 -241.39 31.84 -239.27 35.93 -237.16 40.32 -234.9 44.08 -231.77 47.26 -228.15 49.62 -225.46 51.8 -222.46 53.43 -219.16 55.36 -215.25 57.43 -211.41 59.18 -207.42 60.2 -205.09 60.77 -202.55 61.44 -200.08 62.12 -197.54 62.73 -194.98 63.27 -192.41 63.56 -191.05 63.68 -189.66 63.82 -188.27 64.48 -181.7 64.57 -175.1 64.16 -168.53 63.85 -163.56 63.5 -158.6 63.37 -153.61 63.33 -151.84 62.94 -150.02 63.15 -148.26 63.54 -145.01 63.25 -141.75 63.5 -138.52 63.73 -135.53 64.69 -132.68 65.46 -129.8 67.25 -123.13 69.47 -116.6 72.71 -110.46 73.23 -109.46 73.77 -108.48 74.3 -107.48 m 55.03 -164.34 b 55.34 -166.73 54.62 -168.86 53.54 -170.87 52.49 -172.83 50.56 -173.41 48.88 -172.07 46.08 -169.83 43.83 -167.23 43.85 -163.27 43.87 -161.57 43.5 -159.85 43.23 -158.16 42.82 -155.61 42.3 -153.07 42.28 -150.48 42.27 -149.09 42.64 -148.81 43.96 -149.13 45.22 -149.44 46.28 -150.1 47.21 -150.99 48.27 -152.01 49.36 -152.97 50.47 -153.92 51.97 -155.21 53.65 -156.48 54.17 -158.52 54.66 -160.43 55.37 -162.34 55.03 -164.34 m -57.78 -35.61 b -57.67 -34.76 -57.42 -33.95 -57.14 -33.13 -56.2 -30.3 -55.37 -27.43 -54.52 -24.57 -54.07 -23.05 -53.66 -21.52 -53.23 -19.99 -52.36 -16.87 -51.83 -13.68 -51.2 -10.51 -50.79 -8.52 -50.04 -6.58 -49.08 -4.75 -48.6 -3.82 -47.66 -3.52 -46.86 -3.22 -45.91 -2.85 -45.65 -2.31 -45.68 -1.43 -45.71 -0.34 -45.41 0.7 -45.04 1.67 -43.16 6.65 -41.79 11.76 -40.95 17 -40.32 20.84 -39.87 24.71 -39.24 28.55 -38.94 30.44 -38.51 32.33 -37.96 34.17 -36.94 37.61 -36.64 41.18 -36.13 44.71 -35.65 47.98 -35.13 51.26 -35.27 54.59 -35.29 55.25 -35.33 55.92 -35.36 56.58 -37.4 55.11 -39.14 53.31 -40.89 51.55 -42.09 50.34 -43.19 49.01 -44.48 47.89 -45.37 47.12 -45.82 45.97 -46.83 45.18 -47.26 45.82 -46.94 46.31 -46.77 46.73 -44.72 51.97 -42.33 57.04 -39.09 61.67 -38.82 62.05 -38.5 62.39 -38.49 62.89 -38.49 62.89 -38.46 62.86 -38.46 62.86 -38.93 62.89 -39.39 62.86 -39.78 62.54 -42.44 60.38 -45.38 58.63 -48.33 56.93 -49.14 56.47 -49.57 55.48 -50.75 55.4 -50.7 56.87 -49.47 57.64 -48.78 58.66 -48.08 59.69 -47.1 60.55 -46.21 61.44 -45.3 62.36 -44.33 63.24 -43.35 64.18 -43.98 64.46 -44.43 64.15 -44.73 63.91 -46.26 62.67 -48.07 61.72 -49.3 60.18 -50.93 58.13 -53.21 57.11 -55.35 55.83 -57.1 54.79 -58.94 53.9 -60.81 52.56 -62.27 57.11 -62.33 61.68 -62.01 66.33 -66.33 61.63 -68.36 56.01 -68.94 49.76 -69.46 51.4 -69.17 53.08 -69.58 54.68 -71.95 49.4 -72.32 43.97 -71.01 38.36 -74.16 43.71 -76.56 49.34 -78.18 55.57 -78.9 54.22 -79.38 53.08 -79.22 51.74 -78.93 49.25 -78.67 46.77 -78.02 44.33 -76.88 40.08 -75.73 35.84 -74.47 31.62 -74.19 30.7 -74.31 29.66 -75.28 28.89 -76.16 29.91 -76.02 31.35 -77 32.36 -79.16 29.97 -78.5 26.8 -79.58 24.13 -79.58 25.43 -79.58 26.74 -79.58 28.04 -79.66 28.06 -79.75 28.08 -79.83 28.11 -80.11 27.46 -80.38 26.81 -80.78 25.87 -80.82 28.52 -80.23 30.72 -79.36 32.85 -82.27 34.12 -83.93 33.26 -85.9 29.5 -86.84 30.81 -86.15 32.36 -86.58 33.93 -87.29 32.98 -87.6 32.05 -87.62 31.03 -87.69 25.33 -87.15 19.74 -85.48 14.21 -83.16 6.49 -79.8 -0.73 -75.84 -7.71 -74.54 -10 -72.72 -11.98 -71.71 -14.45 -69.58 -19.62 -66.79 -24.41 -63.61 -28.98 -61.92 -31.4 -60.26 -33.88 -57.78 -35.61 m 53.37 50.52 b 51.7 49.46 50.7 47.81 49.73 46.18 47.65 42.69 45.91 39.03 44.13 35.39 42.29 31.62 40.73 27.75 40.07 23.58 39.75 21.52 40.24 19.47 40.84 17.54 42.37 12.65 44.5 8.01 47.04 3.56 47.66 2.47 48.36 1.42 48.94 0.31 49.44 -0.64 50.12 -0.9 51.07 -0.52 54.02 0.66 57.09 0.93 60.23 0.97 62.13 1 63.97 1.72 65.9 1.83 67 1.9 67.97 2.69 68.75 3.55 70.76 5.76 73.11 7.62 75.25 9.68 77.07 11.44 79.18 12.83 81.06 14.5 83.39 16.56 85.93 18.4 87.87 20.87 87.19 21.84 87.54 22.89 87.64 23.92 87.99 27.7 88.03 31.48 87.53 35.25 87.5 35.43 87.38 35.63 86.86 35.6 85.89 32.14 84.92 28.59 84.18 24.96 83.61 26.07 84.23 27.1 84.24 28.16 84.32 34.01 84.09 39.84 83.03 45.62 82.69 47.49 81.84 49.18 80.54 50.66 81.2 48.95 80.97 47.19 81.04 45.45 81.1 43.91 80.9 42.34 80.54 40.91 79.9 38.41 80.16 35.8 79.24 33.32 78.88 32.32 78.66 31.04 78.66 29.84 78.67 29.36 78.77 28.75 78.04 28.39 76.24 38.41 72.42 47.41 65.31 54.82 71.29 44.89 73.7 34.05 73.79 22.59 72.72 24.39 72.2 26.41 71.53 28.35 70.77 30.55 69.97 32.73 68.89 34.79 68.08 36.34 67.81 38.06 67.28 39.69 66.7 41.45 66.16 43.23 65.48 44.96 64.8 46.66 64.16 48.4 64.27 50.6 62.4 49.14 63.54 47.25 62.88 45.65 60.25 47.25 58.16 49.61 55.06 50.52 55.08 49.41 56.17 49 55.87 48.08 56.26 48.13 56.47 47.96 56.52 47.58 56.53 47.54 56.45 47.44 56.41 47.44 55.98 47.45 55.93 47.77 55.88 48.09 54.88 48.73 54.26 49.77 53.37 50.52 m -103.73 -63.28 b -103.77 -63.33 -103.8 -63.37 -103.84 -63.42 -103.88 -63.38 -103.95 -63.34 -103.95 -63.3 -103.96 -63.25 -103.89 -63.2 -103.85 -63.16 -103.81 -63.2 -103.77 -63.24 -103.73 -63.28 m -107.45 -73.57 l -107.38 -73.69 -107.49 -73.7 -107.45 -73.57 m 119.02 -1.9 b 117.41 -4.97 116.43 -8.29 115.12 -11.47 114.01 -14.16 112.73 -16.8 112.02 -19.63 110.55 -25.42 108.02 -30.85 106.36 -36.57 105.55 -39.37 104.91 -42.22 103.97 -44.98 103.73 -45.68 103.32 -46.3 103.11 -46.93 102.2 -49.65 100.86 -52.29 100.97 -55.26 100.99 -55.91 100.7 -56.41 100.64 -56.99 100.59 -57.41 100.06 -57.8 100.56 -58.26 101.98 -57.2 102.67 -55.58 103.59 -54.16 106.04 -50.38 108.43 -46.56 110.73 -42.69 113.37 -38.24 115.78 -33.67 117.04 -28.59 117.81 -25.5 117.76 -22.41 116.63 -19.41 116.19 -18.27 116.25 -17.32 116.79 -16.21 118.34 -13.02 119 -9.57 119.4 -6.07 119.56 -4.67 119.91 -3.22 119.02 -1.9 m 54.64 50.66 b 54.6 50.69 54.55 50.75 54.51 50.75 54.47 50.75 54.44 50.68 54.4 50.64 54.45 50.61 54.49 50.55 54.53 50.55 54.57 50.55 54.6 50.62 54.64 50.66 m -38.07 63.26 b -38.33 63.26 -38.46 63.12 -38.46 62.86 -38.46 62.86 -38.49 62.89 -38.49 62.89 -38.28 62.94 -38.14 63.07 -38.09 63.28 l -38.07 63.26 m -38.09 63.28 b -38.05 63.31 -38 63.34 -37.96 63.37 -38 63.33 -38.03 63.3 -38.07 63.26 -38.07 63.26 -38.09 63.28 -38.09 63.28 m -163.64 205.99 b -163.73 206.15 -163.81 206.3 -163.89 206.45 -164.02 206.18 -163.88 206.07 -163.64 205.99 m 87.24 -5.69 b 85.49 -6.43 84.2 -7.78 82.72 -8.86 79.47 -11.24 77.01 -14.36 74.61 -17.55 73.53 -18.97 72.42 -20.42 71.09 -21.6 69.65 -22.89 69.12 -24.56 68.71 -26.27 68.04 -29.04 67.71 -31.9 65.79 -34.21 65.36 -34.72 65.47 -35.34 65.47 -35.93 65.47 -38.19 65.49 -40.45 65.47 -42.72 65.45 -44.32 65.1 -45.85 64.58 -47.37 63.68 -50.01 63.33 -52.77 63.12 -55.54 62.97 -57.39 63.14 -59.26 63.08 -61.12 63.02 -62.9 63.99 -64.36 64.24 -65.99 65.09 -65.96 65.03 -65.39 65.15 -64.99 66.32 -61.11 67.56 -57.26 68.61 -53.36 69.69 -49.38 71.19 -45.55 72.61 -41.69 74.46 -36.65 76.43 -31.64 78.61 -26.73 80.42 -22.66 82.17 -18.57 83.97 -14.51 85.23 -11.66 86.31 -8.75 87.24 -5.69 m -96.06 -91.11 b -95.93 -91.1 -95.8 -91.11 -95.68 -91.08 -95.37 -91.01 -94.94 -90.98 -95.07 -90.54 -95.19 -90.14 -95.58 -90.23 -95.88 -90.37 -96.05 -90.46 -96.2 -90.59 -96.35 -90.7 -96.26 -90.84 -96.16 -90.97 -96.06 -91.11 m -25.78 -166.67 b -25.79 -166.62 -25.8 -166.54 -25.83 -166.52 -25.94 -166.47 -26.01 -166.54 -25.99 -166.69 -25.98 -166.73 -25.91 -166.77 -25.87 -166.8 -25.84 -166.76 -25.81 -166.71 -25.78 -166.67 m -25.39 -165.43 b -25.42 -165.39 -25.46 -165.34 -25.49 -165.3 -25.52 -165.35 -25.57 -165.4 -25.56 -165.45 -25.56 -165.5 -25.5 -165.55 -25.47 -165.59 -25.44 -165.54 -25.41 -165.49 -25.39 -165.43
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,看板娘,0,0,0,,{\an7\p1\1c&HE434E3&\pos(1450,770)\fscx36\fscy36\fad(0,600)}m -107.24 -94.17 b -107.05 -92.87 -107.48 -91.5 -106.84 -90.25 -106.87 -88.65 -106.9 -87.05 -106.94 -85.46 -106.97 -84.06 -106.92 -82.68 -107.2 -81.29 -107.43 -80.14 -107.33 -78.93 -106.94 -77.75 -105.88 -74.46 -104.91 -71.15 -103.9 -67.85 -103.8 -67.53 -103.72 -67.2 -103.57 -66.91 -102.67 -65.2 -102.12 -63.37 -101.69 -61.49 -101.46 -60.51 -100.93 -59.77 -100.11 -59.08 -97.58 -56.93 -95.87 -54.19 -94.98 -50.97 -94.58 -49.51 -94.19 -48.03 -93.76 -46.57 -92.95 -43.75 -93.04 -40.85 -92.89 -37.97 -92.77 -35.72 -92.62 -33.47 -92.23 -31.26 -92.16 -30.84 -92.28 -30.47 -92.35 -30.08 -92.6 -28.56 -92.61 -27.01 -92.4 -25.5 -91.94 -22.2 -92.26 -18.94 -93.63 -15.99 -94.83 -13.4 -94.91 -10.89 -94.4 -8.26 -94.06 -6.46 -94 -4.72 -94.47 -2.95 -94.95 -1.18 -94.65 0.68 -95.27 2.46 -95.96 4.47 -96.61 6.56 -97.86 8.22 -99.03 9.76 -100.68 10.98 -102.52 11.81 -102.9 11.97 -103.31 12.02 -103.7 11.89 -104.88 11.51 -106.1 11.58 -107.25 11.83 -108.3 12.06 -108.68 11.55 -108.75 10.79 -108.92 8.69 -109.24 6.64 -108.96 4.46 -108.63 1.86 -107.75 -0.52 -107.04 -2.98 -106.67 -4.23 -106.54 -5.54 -106.93 -6.72 -107.99 -9.93 -108 -13.26 -108.33 -16.55 -108.93 -22.5 -109.28 -28.47 -109.23 -34.45 -109.2 -38.71 -109.21 -42.98 -108.71 -47.2 -108.14 -51.99 -108.4 -56.77 -108.4 -61.56 -108.4 -64.06 -108.86 -66.56 -109.1 -69.07 -109.13 -69.33 -109.19 -69.61 -109.15 -69.86 -108.56 -72.98 -109.35 -76.07 -109.29 -79.18 -109.24 -81.34 -109.6 -83.57 -110.18 -85.65 -110.69 -87.49 -110.77 -89.3 -110.84 -91.15 -111.07 -92.37 -110.72 -93.54 -110.46 -94.71 -110.36 -95.42 -109.84 -95.47 -109.3 -95.41 -108.43 -95.31 -107.65 -95.04 -107.24 -94.17 m -94.24 -35.27 b -95.19 -34.22 -96.33 -33.55 -97.33 -32.71 -99.13 -31.2 -100.53 -29.44 -101 -26.98 -101.34 -25.18 -101.4 -23.28 -102.26 -21.59 -103.74 -18.68 -103.74 -18.68 -103.73 -15.48 -103.73 -14.88 -103.71 -14.29 -103.7 -13.69 -103.69 -13.02 -103.61 -12.37 -103.29 -11.76 -102.64 -10.48 -102.48 -9.12 -102.52 -7.7 -102.59 -5.66 -102.19 -3.68 -101.55 -1.68 -99.99 -2.88 -99.68 -4.49 -99.58 -6.16 -99.52 -7.22 -99.51 -8.29 -99.58 -9.35 -99.65 -10.55 -99.24 -11.57 -98.63 -12.54 -97.83 -13.84 -97.03 -15.14 -96.14 -16.37 -94.84 -18.16 -94.08 -20.07 -94.35 -22.31 -94.41 -22.77 -94.39 -23.25 -94.31 -23.71 -93.69 -27.53 -94.19 -31.36 -94.24 -35.27 m -107.09 -72.73 b -107.71 -69.64 -106.64 -66.97 -105.11 -64.42 -104.95 -64.13 -104.69 -63.78 -104.34 -63.94 -103.85 -64.15 -104.03 -64.61 -104.2 -64.95 -105.41 -67.45 -106.15 -70.12 -107.09 -72.73
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,字幕组署名,0,0,0,,{\fn方正筑紫明朝宋 简繁\fs32\an4\pos(1520,700)\1c&H000000&\fad(0,600)}本字幕由 {\1c&H7616D9&\b1}極彩花夢{\1c&H000000&\b0} 制作
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,字幕制作人员,0,0,0,,{\fn方正筑紫明朝宋 简繁\fs28\an7\pos(1520,736)\1c&H000000&\fad(0,600)}时轴：\N日听：\N翻译：\N校对：
Dialogue: 0,0:00:00.00,0:00:07.00,Ex-KSY,字幕制作人员,0,0,0,,{\fn方正筑紫明朝宋 简繁\fs28\an7\pos(1670,736)\1c&H000000&\fad(0,600)}后期：\N{\alpha&HFF&}后期：{\alpha}\N海报：
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— EX - 字幕组署名 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— EX - 特殊效果 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,ENV,0,0,0,code once,require = _G.require re = require("re") util = require("aegisub.util") karaskel = require("karaskel") unicode = require("unicode") aegisub = _G.aegisub pairs = _G.pairs ipairs = _G.ipairs string = _G.string table = _G.table type = _G.type tonumber = _G.tonumber next = _G.next select = _G.select
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,Yutils,0,0,0,code once,Yutils = { table = { copy = function(t, depth) if type(t) ~= "table" or depth ~= nil and not (type(depth) == "number" and depth >= 1) then error("table and optional depth expected", 2) end local function copy_recursive(old_t) local new_t = {} for key, value in pairs(old_t) do new_t[key] = type(value) == "table" and copy_recursive(value) or value end return new_t end local function copy_recursive_n(old_t, depth) local new_t = {} for key, value in pairs(old_t) do new_t[key] = type(value) == "table" and depth >= 2 and copy_recursive_n(value, depth - 1) or value end return new_t end return depth and copy_recursive_n(t, depth) or copy_recursive(t) end, tostring = function(t) if type(t) ~= "table" then error("table expected", 2) end local result, result_n = {}, 0 local function convert_recursive(t, space) for key, value in pairs(t) do if type(key) == "string" then key = string.format("%q", key) end if type(value) == "string" then value = string.format("%q", value) end result_n = result_n + 1 result[result_n] = string.format("%s[%s] = %s", space, key, value) if type(value) == "table" then convert_recursive(value, space .. "\t") end end end convert_recursive(t, "") return table.concat(result, "\n") end } }
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code once,function debug(e) if type(e) == "table" then e = Yutils.table.tostring(e) elseif e == nil then e = "nil" end aegisub.debug.out(2, e .. "\n") end
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code once,function ame(exec) local value = exec() if value ~= nil then return value else return "" end end
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code once,function strinfo(str, styleref) styleref = styleref ~= nil and styleref or line.styleref local width, height, descent, extlead = aegisub.text_extents(styleref, str) return { ["width"] = width, ["height"] = height, ["descent"] = descent, ["extlead"] = extlead } end
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code once,function color_convert(str) local color = "" if re.find(str, "#") ~= nil then match = re.match(str, "#([A-Za-z0-9]{2})([A-Za-z0-9]{2})([A-Za-z0-9]{2})") color = "&H" .. match[4]["str"] .. match[3]["str"] .. match[2]["str"] .. "&" else match = re.match(str, "&H([A-Za-z0-9]{2})([A-Za-z0-9]{2})([A-Za-z0-9]{2})&") color = "#" .. match[4]["str"] .. match[3]["str"] .. match[2]["str"] end return color end
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code once,function strlen(str) local tmp = str local count = 0 local byteCount = 0 while (string.len(tmp) > 0) do local code = string.byte(tmp) if (code <= 127) then byteCount = byteCount + 1 elseif (code <= 223) then byteCount = byteCount + 2 elseif (code <= 239) then byteCount = byteCount + 3 else byteCount = byteCount + 4 end tmp = string.sub(str, byteCount + 1) count = count + 1 end return count end
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code once,function strsub(str, start, length) start = start - 1 if (length <= 0) then return "" end local tmp = str local count = 0 local byteCount = 0 local byteSubStart = 1 local byteSubEnd = -1 while (string.len(tmp) > 0) do if (count == start) then byteSubStart = byteCount + 1 elseif (count == start + length) then byteSubEnd = byteCount break end local code = string.byte(tmp) if (code <= 127) then byteCount = byteCount + 1 elseif (code <= 223) then byteCount = byteCount + 2 elseif (code <= 239) then byteCount = byteCount + 3 else byteCount = byteCount + 4 end tmp = string.sub(str, byteCount + 1) count = count + 1 end return string.sub(str, byteSubStart, byteSubEnd) end
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code once,function strrep(str, search, replace) local res = "" for i = 0, strlen(str) - 1 do local current = strsub(str, i + 1, 1) if current == search then res = res .. replace else res = res .. current end end return res end
Dialogue: 0,0:00:00.00,0:00:15.00,Ex-effects,,0,0,0,,{\an7\p1\pos(959,0)\1c&H000000&\3c&HFFFFFF&\bord1\blur4}m 0 0 l 0 1080 l 2 1080 l 2 0
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— EX - 特殊效果 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— SX - effect - 正文修正特效 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,角色配置,0,0,0,code once,characters = {["Basic"]="{\\blur2}", ["角色A"]="{\\3c&H7642FA&}", ["Blank"]="{\\3c&H000000&}"}
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,正文修正,0,0,0,code once,--[[極彩花夢 - 正文字幕样式配置自动化]] --[[———————————————————————————————]] --[[为不同角色配置不同的效果]] --[[修正标点符号显示效果，为句首、句尾含有标点符号的行调整重心]] --[[将开始时间、结束时间设为最近的帧]] --[[添加\furigana(num,text,fsc,fsp)]] --[[检查字幕是否超出画布或接近边缘]] --[[检查字幕持续时间是否过短]] --[[检查字幕开始时间、结束时间周围是否有关键帧]] --[[检查字幕是否闪轴]] function shuusei() shuusei_style() local res = shuusei_effect(true) res = res .. characters["Basic"] res = res .. shuusei_character() res = res .. shuusei_content() shuusei_layer() shuusei_margin() shuusei_time() res = shuusei_relocate(res) shuusei_check() return res end function shuusei_menu() local function _generate_dropdown(menu, name, label, items, description) menu[#menu + 1] = { class = "label", x = 0, y = menu[#menu].y + menu[#menu].height + 1, width = 4, height = 1, label = label .. "：" } menu[#menu + 1] = { name = name, class = "dropdown", x = 5, y = menu[#menu].y, width = 4, height = 1, items = items, value = items[1] } menu[#menu + 1] = { class = "label", x = 0, y = menu[#menu].y + 1, width = 9, height = select(2, description:gsub("\n", "")) + 1, label = description } end local menu = { { class = "label", x = 2, y = 0, width = 5, height = 1, label = "極彩花夢 - 正文字幕样式配置自动化v240520" } } local function _add(_list, _elements) for _, _value in ipairs(_elements) do if _value ~= _list[1] then table.insert(_list, _value) end end return _list end local _lang = {} if meta["language"] ~= nil and meta["language"] == "JPN" then table.insert(_lang, "日语字幕") end _lang = _add(_lang, { "中日双语", "日语字幕" }) local _styles = {} table.insert(_styles, " ") _styles = _add(_styles, { "kawaii", "sans", "serif" }) _generate_dropdown(menu, "lang", "选择字幕配置", _lang, "将双语字幕按照预设转变为日语字幕。\n如果字幕贴近边缘、超出画布会进行提示。") _generate_dropdown(menu, "style", "应用样式", _styles, "忽略默认配置强制应用预设的字幕样式，如果与默认配置相同则此选项不会生效。\n仅用于调试，部分标签会表达出错误的效果。") _generate_dropdown(menu, "check_duration", "字幕持续时间检测阈值", { "10帧", "15帧", "12帧" }, "如果持续时间低于设定帧数会提示。") _generate_dropdown(menu, "check_start_frame", "字幕开始时间关键帧检测阈值", { "3帧", "5帧", "7帧" }, "如果开始时间离最近的关键帧的差值小于设定帧数会提示。") _generate_dropdown(menu, "check_end_frame", "字幕结束时间关键帧检测阈值", { "4帧", "8帧", "12帧" }, "如果结束时间离最近的关键帧的差值小于设定帧数会提示。") _generate_dropdown(menu, "check_time_interval", "字幕闪轴检测阈值", { "6帧", "10帧", "15帧" }, "如果开始时间与前一行字幕的结束时间差值小于设定帧数会提示。") menu[#menu + 1] = { name = "change_characters", class = "checkbox", x = 0, y = menu[#menu].y + menu[#menu].height + 1, width = 1, height = 1, label = "修改效果表", value = false } menu[#menu + 1] = { class = "label", x = 0, y = menu[#menu].y + menu[#menu].height, width = 1, height = 1, label = "基础效果：" } menu[#menu + 1] = { name = "characters_Basic", class = "edit", x = 1, y = menu[#menu].y, width = 2, height = 1, text = re.match(characters["Basic"], "\\{(.+)\\}")[2]["str"] } menu[#menu + 1] = { class = "label", x = 3, y = menu[#menu].y, width = 1, height = 1, label = "空白效果：" } menu[#menu + 1] = { name = "characters_Blank", class = "color", x = 4, y = menu[#menu].y, width = 2, height = 1, value = color_convert(re.match(characters["Blank"], "\\\\3c(&H[0-9A-F]{6}&)")[2]["str"]) } for _character, _effect in pairs(characters) do if _character ~= "Basic" and _character ~= "Blank" then menu[#menu + 1] = { class = "label", x = menu[#menu - 1].x + 3 > 6 and 0 or menu[#menu - 1].x + 3, y = menu[#menu].y + (menu[#menu - 1].x + 3 > 6 and 1 or 0), width = 1, height = 1, label = _character .. "：" } menu[#menu + 1] = { name = "characters_" .. _character, class = "color", x = menu[#menu].x + 1, y = menu[#menu].y, width = 2, height = 1, value = color_convert(re.match(_effect, "\\\\3c(&H[0-9A-F]{6}&)")[2]["str"]) } end end local space = string.rep("\xE3\x80\x80", 9) local button, _config = aegisub.dialog.display( menu, { space .. "应用" .. space, space .. "取消" .. space } ) if button == space .. "取消" .. space then aegisub.cancel() end local function _generate_style(str) local _styleref = { ["name"] = "Sx-jp", ["fontname"] = "", ["fontsize"] = 0, ["color1"] = "&H00FFFFFF&", ["color2"] = "&HFFFFFFFF&", ["color3"] = "&H00000000&", ["color4"] = "&H00000000&", ["bold"] = false, ["italic"] = false, ["underline"] = false, ["strikeout"] = false, ["scale_x"] = 100, ["scale_y"] = 100, ["spacing"] = 0, ["angle"] = 0, ["borderstyle"] = 1, ["outline"] = 0, ["shadow"] = 0, ["align"] = 2, ["margin_l"] = 0, ["margin_r"] = 0, ["margin_v"] = 0, ["margin_t"] = 0, ["margin_b"] = 0, ["encoding"] = 1, ["class"] = "style", ["raw"] = str, ["section"] = "[V4+ Styles]", ["relative_to"] = 2, } local _asstag = { ["name"] = false, ["fontname"] = "fn", ["fontsize"] = "fs", ["color1"] = "1c", ["color2"] = "2c", ["color3"] = "3c", ["color4"] = "4c", ["bold"] = "b", ["italic"] = "i", ["underline"] = "u", ["strikeout"] = "s", ["scale_x"] = "fscx", ["scale_y"] = "fscy", ["spacing"] = "fsp", ["angle"] = "frz", ["borderstyle"] = false, ["outline"] = "bord", ["shadow"] = "shad", ["align"] = "an", ["margin_l"] = function(_value) line.margin_l = _value + line.margin_l end, ["margin_r"] = function(_value) line.margin_r = _value + line.margin_r end, ["margin_v"] = function(_value) line.margin_v = _value + line.margin_v line.margin_t = line.margin_v line.margin_b = line.margin_v end, ["margin_t"] = false, ["margin_b"] = false, ["encoding"] = "fe", } match = re.match(str, "^Style: ?([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)$") table.remove(match, 1) local _keys = { "name", "fontname", "fontsize", "color1", "color2", "color3", "color4", "bold", "italic", "underline", "strikeout", "scale_x", "scale_y", "spacing", "angle", "borderstyle", "outline", "shadow", "align", "margin_l", "margin_r", "margin_v", "encoding" } local _effect = "{" local _margin = {} for _index in pairs(_keys) do if type(_styleref[_keys[_index]]) == "string" then _styleref[_keys[_index]] = match[_index]["str"] elseif type(_styleref[_keys[_index]]) == "boolean" then _styleref[_keys[_index]] = match[_index]["str"] == "1" elseif type(_styleref[_keys[_index]]) == "number" then if _keys[_index] == "margin_v" then _styleref["margin_t"] = tonumber(match[_index]["str"]) _styleref["margin_b"] = tonumber(match[_index]["str"]) end _styleref[_keys[_index]] = tonumber(match[_index]["str"]) end if _asstag[_keys[_index]] == false then goto continue elseif type(_asstag[_keys[_index]]) == "string" then _effect = _effect .. "\\" .. _asstag[_keys[_index]] .. ((_index >= 4 and _index <= 7) and util.color_from_style(match[_index]["str"]) or match[_index]["str"]) elseif type(_asstag[_keys[_index]]) == "function" then _margin[#_margin + 1] = { _asstag[_keys[_index]], tonumber(match[_index]["str"]) } end ::continue:: end _effect = _effect .. "}" return _styleref, _effect, _margin end local _generated_style_jp = { {}, "", {} } local _generated_style_zh = { {}, "", {} } config = { ["JPN_only"] = _config["lang"] ~= "中日双语", ["style_force"] = _config["style"] ~= " ", ["style"] = "", ["styleref"] = { ["Sx-jp"] = {}, ["Sx-zh"] = {}, }, ["stylerefs"] = { ["kawaii"] = { ["Sx-jp"] = _generate_style( "Style: Sx-jp,A-OTF Shin Maru Go Pr6N DB,68,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H00000000,0,0,0,0,99,100,0.5,0,1,2.42,0,2,0,0,18,128"), ["Sx-zh"] = _generate_style( "Style: Sx-zh,方正兰亭圆_GBK_中,66,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2.42,0,2,0,0,74,1"), }, ["sans"] = { ["Sx-jp"] = _generate_style( "Style: Sx-jp,Noto Sans JP Medium,64,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H00000000,0,0,0,0,99,100,0.5,0,1,2.42,0,2,0,0,15,128"), ["Sx-zh"] = _generate_style( "Style: Sx-zh,Noto Sans SC Medium,80,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H00000000,0,0,0,0,99,100,0.5,0,1,2.42,0,2,0,0,66,1"), }, ["serif"] = { ["Sx-jp"] = _generate_style( "Style: Sx-jp,A-OTF Ryumin Pr6N H-KL,60,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H00000000,0,0,0,0,99,100,1,0,1,2.42,0,2,0,0,20,128"), ["Sx-zh"] = _generate_style( "Style: Sx-zh,方正中粗雅宋_GBK,66,&H00FFFFFF,&HFFFFFFFF,&H00000000,&H00000000,0,0,0,0,95,100,2,0,1,2.42,0,2,0,0,70,1"), }, }, ["effect"] = { ["Sx-jp"] = _generated_style_jp[2], ["Sx-zh"] = _generated_style_zh[2], }, ["margin"] = { ["Sx-jp"] = _generated_style_jp[3], ["Sx-zh"] = _generated_style_zh[3], }, ["check_duration"] = tonumber(re.match(_config["check_duration"], "(\\d+)")[1]["str"]), ["check_start_frame"] = tonumber(re.match(_config["check_start_frame"], "(\\d+)")[1]["str"]), ["check_end_frame"] = tonumber(re.match(_config["check_end_frame"], "(\\d+)")[1]["str"]), ["check_time_interval"] = tonumber(re.match(_config["check_time_interval"], "(\\d+)")[1]["str"]), } if _config["change_characters"] == true then for key, value in pairs(_config) do if re.find(key, "^characters_") ~= nil then local _character = re.match(key, "^characters_(.+)$")[2]["str"] if _character == "Basic" then characters["Basic"] = re.sub(characters["Basic"], "\\{(.+)\\}", "{" .. re.sub(value, "\\\\", "\\\\\\\\") .. "}") else characters[_character] = re.sub(characters[_character], "\\\\3c(&H[0-9A-F]{6}&)", "\\\\3c" .. color_convert(value)) end end end end end shuusei_menu() keyframes = {} for _, v in pairs(aegisub.keyframes()) do keyframes[v] = true end prev_end_frame = 0 shuusei_pandora = { ["A-OTF Shin Maru Go Pr6N DB"] = { ["style"] = "kawaii", ["margin_t"] = 8, ["contentrep"] = { ["？"] = "？", ["！"] = "！", ["…"] = "…", ["「"] = "「", [" "] = "{\\fscx160} {\\fscx}", ["」"] = "」", ["・"] = "・", }, ["relocate"] = { }, ["furigana"] = { ["content"] = "{\\an%s\\fs%s\\fscx%s\\fscy%s\\fsp%s\\pos(%s,%s)}%s", ["Yoffset"] = 12, ["Yoffset2"] = -12, ["Yoffset3"] = -6, ["fscx"] = 84, ["fscy"] = 82, }, ["JPN_only"] = { ["fs"] = 80, ["Yoffset"] = 8, ["Yoffset2"] = 6, }, }, ["方正兰亭圆_GBK_中"] = { ["style"] = "kawaii", ["margin_t"] = 64, ["contentrep"] = { ["？"] = "{\\alpha&HFF&}喵{\\alpha}", ["！"] = "{\\fscx50} {\\fscx110}!{\\fscx150} {\\fscx0}!{\\fscx}", ["…"] = "{\\alpha&HFF&\\fscx90}喵{\\alpha\\fscx}", ["「"] = "「", [" "] = "{\\fscx120} {\\fscx}", ["」"] = "」", ["・"] = "{\\alpha&HFF&}喵{\\alpha}", }, ["relocate"] = { ["？"] = { ["content"] = "{\\an4\\fnA-OTF Shin Maru Go Pr6N DB\\fscx116\\fscy128\\pos(%s,%s)}？", ["Xoffset"] = -3, ["Yoffset"] = -2, ["Yoffset2"] = -2, }, ["…"] = { ["content"] = "{\\an4\\fnA-OTF Shin Maru Go Pr6N DB\\fscx78\\fscy78\\pos(%s,%s)\\fsp-22}・・・", ["Xoffset"] = -8, ["Yoffset"] = 0, ["Yoffset2"] = 0, }, ["・"] = { ["content"] = "{\\an5\\fnA-OTF Shin Maru Go Pr6N DB\\fscx116\\fscy116\\pos(%s,%s)}・", ["Xoffset"] = 0, ["Yoffset"] = 0, ["Yoffset2"] = 0, }, }, ["furigana"] = { ["content"] = "{\\an%s\\fs%s\\fscx%s\\fscy%s\\fsp%s\\pos(%s,%s)}%s", ["Yoffset"] = 6, ["Yoffset2"] = -10, ["Yoffset3"] = -8, ["fscx"] = 82, ["fscy"] = 80, }, }, ["Noto Sans JP Medium"] = { ["style"] = "sans", ["margin_t"] = 4, ["contentrep"] = { ["？"] = "{\\fscx20} {\\fscx}?{\\fscx80} {\\fscx0}?{\\fscx}", ["！"] = "{\\fscx30} {\\fscx}!{\\fscx70} {\\fscx0}!{\\fscx}", ["…"] = "…", ["「"] = "「", [" "] = "{\\fscx160} {\\fscx}", ["」"] = "」", ["・"] = "・", }, ["relocate"] = { }, ["furigana"] = { ["content"] = "{\\an%s\\fs%s\\fscx%s\\fscy%s\\fsp%s\\pos(%s,%s)}%s", ["Yoffset"] = 8, ["Yoffset2"] = -10, ["Yoffset3"] = -8, ["fscx"] = 84, ["fscy"] = 82, }, ["JPN_only"] = { ["fs"] = 76, ["Yoffset"] = 8, ["Yoffset2"] = 6, }, }, ["Noto Sans SC Medium"] = { ["style"] = "sans", ["margin_t"] = 50, ["contentrep"] = { ["？"] = "{\\fscx20} {\\fscx}?{\\fscx80} {\\fscx0}?{\\fscx}", ["！"] = "{\\fscx30} {\\fscx}!{\\fscx70} {\\fscx0}!{\\fscx}", ["…"] = "{\\alpha&HFF&}喵{\\alpha}", ["「"] = "「", [" "] = " ", ["」"] = "」", ["・"] = "{\\alpha&HFF&\\fscx72}喵{\\alpha\\fscx}", }, ["relocate"] = { ["…"] = { ["content"] = "{\\an4\\fnNoto Sans JP Medium\\fscx55\\fscy55\\pos(%s,%s)\\fsp-25}・・・", ["Xoffset"] = -6, ["Yoffset"] = 0, ["Yoffset2"] = 0, }, ["・"] = { ["content"] = "{\\an5\\fnNoto Sans JP Medium\\fscx76\\fscy76\\pos(%s,%s)}・", ["Xoffset"] = 0, ["Yoffset"] = 0, ["Yoffset2"] = 0, }, }, ["furigana"] = { ["content"] = "{\\an%s\\fs%s\\fscx%s\\fscy%s\\fsp%s\\pos(%s,%s)}%s", ["Yoffset"] = 22, ["Yoffset2"] = -27, ["Yoffset3"] = -8, ["fscx"] = 84, ["fscy"] = 82, }, }, ["A-OTF Ryumin Pr6N H-KL"] = { ["style"] = "serif", ["margin_t"] = 10, ["contentrep"] = { ["？"] = "？", ["！"] = "！", ["…"] = "…", ["「"] = "「", [" "] = "{\\fscx160} {\\fscx}", ["」"] = "」", ["・"] = "・", }, ["relocate"] = { }, ["furigana"] = { ["content"] = "{\\an%s\\fs%s\\fscx%s\\fscy%s\\fsp%s\\pos(%s,%s)}%s", ["Yoffset"] = 7, ["Yoffset2"] = -12, ["Yoffset3"] = -7, ["fscx"] = 80, ["fscy"] = 78, }, ["JPN_only"] = { ["fs"] = 70, ["Yoffset"] = 8, ["Yoffset2"] = 6, }, }, ["方正中粗雅宋_GBK"] = { ["style"] = "serif", ["margin_t"] = 62, ["contentrep"] = { ["？"] = "？", ["！"] = "{\\fscx10} {\\fscx}!{\\fscx90} {\\fscx0}!{\\fscx}", ["…"] = "{\\alpha&HFF&}喵{\\alpha}", ["「"] = "「", [" "] = " ", ["」"] = "」", ["・"] = "{\\alpha&HFF&}喵{\\alpha}", }, ["relocate"] = { ["…"] = { ["content"] = "{\\an4\\fnA-OTF Ryumin Pr6N H-KL\\fscx80\\fscy80\\pos(%s,%s)\\fsp-24.5}・・・", ["Xoffset"] = -8, ["Yoffset"] = 0, ["Yoffset2"] = 0, }, ["・"] = { ["content"] = "{\\an5\\fnA-OTF Ryumin Pr6N H-KL\\fscx96\\fscy96\\pos(%s,%s)}・", ["Xoffset"] = 0, ["Yoffset"] = 0, ["Yoffset2"] = 0, }, }, ["furigana"] = { ["content"] = "{\\an%s\\fs%s\\fscx%s\\fscy%s\\fsp%s\\pos(%s,%s)}%s", ["Yoffset"] = 8, ["Yoffset2"] = -10, ["Yoffset3"] = -7, ["fscx"] = 76, ["fscy"] = 74, }, }, } shuusei_pandora["Noto Sans TC Medium"] = shuusei_pandora["Noto Sans SC Medium"] local function _calwidth(str) local styleref = Yutils.table.copy(line.styleref, 1) if config.JPN_only == true then styleref.fontsize = shuusei_pandora[line.styleref.fontname]["JPN_only"]["fs"] end local width = strinfo(str, styleref)["width"] for _search, _replace in pairs(shuusei_pandora[line.styleref.fontname]["contentrep"]) do if re.find(str, _search) ~= nil then local _styleref = Yutils.table.copy(line.styleref, 1) if config.JPN_only == true then _styleref.fontsize = shuusei_pandora[line.styleref.fontname]["JPN_only"]["fs"] end local _width = 0 for _part in re.gsplit(_replace, "\\{", true) do match = re.match(_part, "\\\\fn(.+)\\}") if match ~= nil then _styleref.fontname = match[2]["str"] end match = re.match(_part, "\\\\fscx(\\d*)") if match ~= nil then _styleref.scale_x = tonumber(match[2]["str"]) ~= nil and tonumber(match[2]["str"]) or _styleref.scale_x if match[2]["str"] == "" then _styleref.scale_x = line.styleref.scale_x end end _width = _width + strinfo(re.sub(_part, ".+\\}", ""), _styleref)["width"] end width = width + (_width - strinfo(_search, line.styleref)["width"]) * #re.find(str, _search) end end return width end local function _callineleft(init) init = init ~= nil and init or false if init == true then shuusei_margin() end local _lineleft = 0 _lineleft = (meta.res_x - _calwidth(line.text_stripped)) * .5 return _lineleft + (line.margin_l - line.margin_r) / 2 end local function _getlineeffects() local _effects = "" local _text = orgline.text while re.match(_text, "^({[^}]+})") ~= nil do _effects = _effects .. re.match(_text, "^({[^}]+})")[2]["str"] _text = string.sub(_text, re.match(_text, "^({[^}]+})")[2]["last"] + 1) end _effects = re.sub(_effects, "\\\\an\\d", "") _effects = re.sub(_effects, "\\{\\}", "") return _effects end function shuusei_effect(fix_margin) if fix_margin then for _, exec in pairs(config["margin"][line.styleref.name]) do exec[1](exec[2]) end end local effect = config["effect"][line.styleref.name] effect = re.sub(effect, "\\\\an\\d+", "") return effect end function shuusei_character() local actor = characters[line.actor] and line.actor or "Blank" if config.JPN_only == true then return characters[actor] .. string.format("{\\fs%s}", shuusei_pandora[line.styleref.fontname]["JPN_only"]["fs"]) end return characters[actor] end function shuusei_content() local content = orgline.text local effects = re.find(content, "\\{[^\\}]+\\}") if effects ~= nil then content = re.sub(content, "\\{[^\\}]+\\}", "{}") end content = strrep(content, " ", shuusei_pandora[line.styleref.fontname]["contentrep"][" "]) for search, replace in pairs(shuusei_pandora[line.styleref.fontname]["contentrep"]) do if search ~= " " then content = strrep(content, search, replace) end end if effects ~= nil then content = re.sub(content, "\\{\\}", function() return table.remove(effects, 1)["str"] end) end return content end function shuusei_style() config["style"] = shuusei_pandora[line.styleref.fontname]["style"] line.styleref = config["stylerefs"][config["style"]][line.styleref.name] config["styleref"]["Sx-jp"] = config["stylerefs"][config["style"]]["Sx-jp"] config["styleref"]["Sx-zh"] = config["stylerefs"][config["style"]]["Sx-zh"] end function shuusei_layer() if line.styleref.name == "Sx-zh" then line.layer = 1 end end function shuusei_margin() if line.margin_t ~= 0 then if line.styleref.name == "Sx-zh" then local margin_t_diff = config["styleref"]["Sx-zh"]["margin_t"] margin_t_diff = margin_t_diff - config["styleref"]["Sx-jp"]["margin_t"] line.margin_t = line.margin_t + margin_t_diff end end if re.find(orgline.text, "\\\\an8") ~= nil then line.margin_t = line.margin_t + shuusei_pandora[line.styleref.fontname]["margin_t"] end local dialog_start = strsub(line.text_stripped, 1, 1) if dialog_start == "…" then line.margin_r = line.margin_r + _calwidth(dialog_start) + .5 end if dialog_start == "「" then line.margin_r = line.margin_r + _calwidth(dialog_start) * .5 + .5 end local dialog_end = strsub(line.text_stripped, strlen(line.text_stripped), 1) if dialog_end == "？" or dialog_end == "！" or dialog_end == "…" then line.margin_l = line.margin_l + _calwidth(dialog_end) + .5 end if dialog_end == "」" then line.margin_l = line.margin_l + _calwidth(dialog_end) * .5 + .5 end if config.JPN_only == true then line.margin_t = (line.margin_t == 0 and line.styleref.margin_t or line.margin_t) + (re.find(orgline.text, "\\\\an8") ~= nil and shuusei_pandora[line.styleref.fontname]["JPN_only"]["Yoffset2"] or shuusei_pandora[line.styleref.fontname]["JPN_only"]["Yoffset"]) end end function shuusei_time() local start_time = line.start_time local end_time = line.end_time local start_frame = aegisub.frame_from_ms(start_time) local end_frame = aegisub.frame_from_ms(end_time) local start_time_fix = aegisub.ms_from_frame(start_frame) local end_time_fix = aegisub.ms_from_frame(end_frame) line.start_time = math.floor(start_time_fix / 10 + 0.5) * 10 line.end_time = math.floor(end_time_fix / 10 + 0.5) * 10 end function shuusei_relocate(res) local relocates = { res } for i = 1, strlen(line.text_stripped) do for search, relocate in pairs(shuusei_pandora[line.styleref.fontname]["relocate"]) do if strsub(line.text_stripped, i, 1) == search then local befores = strsub(line.text_stripped, 1, i - 1) local twidth, theight = _calwidth(befores), strinfo(line.text_stripped, line.styleref)["height"] local x = _callineleft() + twidth if re.find(relocate["content"], "\\\\an5") ~= nil then x = x + _calwidth(search) / 2 elseif re.find(relocate["content"], "\\\\an6") ~= nil then x = x + _calwidth(search) end local y = meta.res_y - theight / 2 - (line.margin_t == 0 and line.styleref.margin_t or line.margin_t) x = x + relocate["Xoffset"] y = y + relocate["Yoffset"] if re.find(orgline.text, "\\\\an8") ~= nil then y = meta.res_y - y + relocate["Yoffset"] + relocate["Yoffset2"] end relocates[#relocates + 1] = characters["Basic"] .. shuusei_effect(false) .. shuusei_character() .. _getlineeffects() .. string.format(relocate["content"], x, y) end end end local furiganas = re.find(orgline.text, "\\\\furigana\\(\\d+,.+?\\)") if config.JPN_only ~= true and shuusei_pandora[line.styleref.fontname]["JPN_only"] ~= nil then furiganas = nil end if furiganas ~= nil then for _, part in pairs(furiganas) do local befores, length, furigana, fsc, fsp = "", 0, "", 100, 0 part = string.sub(orgline.text, 1, part["first"] - 1) .. part["str"] match = re.match(part, "\\\\furigana\\((\\d+),([^\\)]+?)\\)$") length = tonumber(match[2]["str"]) ~= nil and tonumber(match[2]["str"]) or 0 furigana = match[3]["str"] if re.find(furigana, ",\\d+$") ~= nil then match = re.match(furigana, "(.+),(\\d+)$") furigana = match[2]["str"] fsc = tonumber(match[3]["str"]) ~= nil and tonumber(match[3]["str"]) or 0 if re.find(furigana, ",\\d+$") ~= nil then match = re.match(furigana, "(.+),(\\d+)$") furigana = match[2]["str"] fsp = fsc fsc = tonumber(match[3]["str"]) ~= nil and tonumber(match[3]["str"]) or 0 end end befores = re.sub(part .. "}", "\\{.+?\\}", "") local x = _callineleft() + _calwidth(befores) - _calwidth(strsub(befores, strlen(befores) - length + 1, length)) / 2 local y = meta.res_y - strinfo(line.text_stripped, line.styleref)["height"] - (line.margin_t == 0 and line.styleref.margin_t or line.margin_t) y = y + shuusei_pandora[line.styleref.fontname]["furigana"]["Yoffset"] if re.find(orgline.text, "\\\\an8") ~= nil then y = meta.res_y - y + shuusei_pandora[line.styleref.fontname]["furigana"]["Yoffset"] + shuusei_pandora[line.styleref.fontname]["furigana"]["Yoffset2"] elseif re.find(furigana, "[gjpqy]") ~= nil then y = y + shuusei_pandora[line.styleref.fontname]["furigana"]["Yoffset3"] end relocates[#relocates + 1] = characters["Basic"] .. shuusei_effect(false) .. shuusei_character() .. _getlineeffects() .. string.format(shuusei_pandora[line.styleref.fontname]["furigana"]["content"], re.find(orgline.text, "\\\\an8") ~= nil and "8" or "2", (fsc == 0 and 100 or fsc) * .01 * (config.JPN_only == true and shuusei_pandora[line.styleref.fontname]["JPN_only"]["fs"] or line.styleref.fontsize), shuusei_pandora[line.styleref.fontname]["furigana"]["fscx"] * line.styleref.scale_x * .01, shuusei_pandora[line.styleref.fontname]["furigana"]["fscy"] * line.styleref.scale_y * .01, (fsp == 0 and "" or fsp), x, y, furigana) end end res = relocates[j] maxloop(#relocates) return res end function output_info(str) function _formatMilliseconds(milliseconds) local seconds = math.floor(milliseconds / 1000) local minutes = math.floor(seconds / 60) local hours = math.floor(minutes / 60) local remainingMinutes = minutes % 60 local remainingSeconds = seconds % 60 local millisecondsPart = milliseconds % 1000 local formattedTime = string.format("%d:%02d:%02d.%02d", hours, remainingMinutes, remainingSeconds, millisecondsPart / 10) return formattedTime end local _info = _formatMilliseconds(line.start_time) .. ": " .. str debug(_info) end function shuusei_check() local width = _calwidth(line.text_stripped) if width > meta.res_x * .9 then output_info("※Invalid width") end if width > meta.res_x * .8 then output_info("Dangerous width") end local x = (meta.res_x - width) / 2 if x - math.abs((line.margin_l - line.margin_r) / 2) < 0 then output_info("※Invalid edge") end if x - math.abs((line.margin_l - line.margin_r) / 2) < meta.res_x / 2 * (1 - .8) then output_info("Dangerous edge") end if aegisub.frame_from_ms(line.end_time) - aegisub.frame_from_ms(line.start_time) <= 6 then output_info("※Invalid duration") end if aegisub.frame_from_ms(line.end_time) - aegisub.frame_from_ms(line.start_time) <= config["check_duration"] then output_info("Dangerous duration") end local start_frame = aegisub.frame_from_ms(line.start_time) local end_frame = aegisub.frame_from_ms(line.end_time) local start_frame_min_diff = config["check_start_frame"] local end_frame_min_diff = config["check_end_frame"] if keyframes[start_frame] ~= true then for i = start_frame - start_frame_min_diff, start_frame + start_frame_min_diff, 1 do if keyframes[i] then output_info("Dangerous start_frame") end end end if keyframes[end_frame] ~= true then for i = end_frame - end_frame_min_diff, end_frame + end_frame_min_diff, 1 do if keyframes[i] then output_info("Dangerous end_frame") end end end if start_frame - prev_end_frame > 0 and start_frame - prev_end_frame <= 4 then output_info("※Invalid time_interval") end if start_frame - prev_end_frame > 0 and start_frame - prev_end_frame <= config["check_time_interval"] then output_info("Dangerous time_interval") end prev_end_frame = end_frame end
Comment: 0,0:00:00.00,0:00:00.00,Sx-jp,AME,0,0,0,code line,fxgroup.SX = (line.styleref.name ~= "Sx-zh" or config.JPN_only ~= true) if strsub(line.actor, 1, 3) == "fx-" then fxgroup.SX = false end
Comment: 0,0:00:00.00,0:00:00.00,Sx-jp,AME,0,0,0,template line keeptags notext fxgroup SX,!shuusei()!
Comment: 0,0:00:00.00,0:00:00.00,Sx-zh,AME,0,0,0,code line,fxgroup.SX = (line.styleref.name ~= "Sx-zh" or config.JPN_only ~= true) if strsub(line.actor, 1, 3) == "fx-" then fxgroup.SX = false end
Comment: 0,0:00:00.00,0:00:00.00,Sx-zh,AME,0,0,0,template line keeptags notext fxgroup SX,!shuusei()!
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,AME,0,0,0,code line all,fxgroup.ZH = (config.JPN_only ~= true)
Comment: 0,0:00:00.00,0:00:00.00,Rx-annotation,AME,0,0,0,code line,fxgroup.RX1 = (line.styleref.fontname == "方正悠宋+ GBK 509R" and fxgroup.ZH) fxgroup.RX2 = (line.styleref.fontname == "方正中粗雅宋_GBK" and fxgroup.ZH)
Comment: 0,0:00:00.00,0:00:00.00,Rx-annotation,AME,0,0,0,code line,alignment = 7 match = re.match(orgline.text, "\\\\an(\\d)") if match then alignment = match[2]["str"] alignment = tonumber(alignment) end start_fad = true end_fad = true if line.layer == 1 then start_fad = false elseif line.layer == 2 then end_fad = false elseif line.layer == 3 then start_fad = false end_fad = false end
Comment: 0,0:00:00.00,0:00:00.00,Rx-annotation,AME,0,0,0,template line notext fxgroup RX1,!relayer(2)!!ame(function() local text = strrep(line.text_stripped, "？", "? ") remember("text", text) end)!!ame(function() local height = strinfo(recall.text)["height"] * (re.find(recall.text, "\\\\N") ~= nil and #re.find(recall.text, "\\\\N") + 1 or 1) remember("height", height) end)!!ame(function() local max_width = 0 for part in re.gsplit(recall.text, "\\\\N", true) do if strinfo(part)["width"] > max_width then max_width = strinfo(part)["width"] end end if alignment == 1 or alignment == 7 then max_width = max_width - strinfo("。")["width"] * .5 end remember("width", max_width) end)!{\an!alignment!\p1\pos(!ame(function() if alignment == 7 or alignment == 1 then return 25 elseif alignment == 9 or alignment == 3 then return meta.res_x - 25 end end)!,!ame(function() if alignment == 7 or alignment == 9 then return 25 elseif alignment == 1 or alignment == 3 then return meta.res_y - 25 end end)!)\1c&HFFFFFF&\bord16\blur6\fad(!start_fad and 300 or 0!,!end_fad and 300 or 0!)\fscx100}m 0 0 l 0 !recall.height! l !recall.width! !recall.height! l !recall.width! 0
Comment: 0,0:00:00.00,0:00:00.00,Rx-annotation,AME,0,0,0,template line notext fxgroup RX1,!relayer(3)!!ame(function() local max_width = 0 for part in re.gsplit(recall.text, "\\\\N", true) do if strinfo(part)["width"] > max_width then max_width = strinfo(part)["width"] end end if alignment == 1 or alignment == 7 then max_width = max_width - strinfo("。")["width"] * .5 end remember("width", max_width) end)!{\an!ame(function() if alignment == 7 or alignment == 9 then return 7 elseif alignment == 1 or alignment == 3 then return 1 end end)!\pos(!ame(function() if alignment == 7 or alignment == 1 then return 25 elseif alignment == 9 or alignment == 3 then return meta.res_x - 25 - recall.width end end)!,!ame(function() if alignment == 7 or alignment == 9 then return 25 elseif alignment == 1 or alignment == 3 then return meta.res_y - 25 end end)!)\fad(!start_fad and 300 or 0!,!end_fad and 300 or 0!)\3a&HFF&}!strrep(orgline.text,"？","? ")!
Comment: 0,0:00:00.00,0:00:00.00,Rx-annotation,AME,0,0,0,template line notext fxgroup RX2,!relayer(2)!!ame(function() local max_width = 0 for part in re.gsplit(line.text_stripped, "\\\\N", true) do if strinfo(part)["width"] > max_width then max_width = strinfo(part)["width"] end end max_width = max_width - strinfo("。")["width"] * .5 if alignment == 9 or alignment == 3 then max_width = max_width + strinfo("喵")["width"] end remember("width", max_width) end)!!ame(function() local height = strinfo(line.text_stripped)["height"] * (re.find(line.text_stripped, "\\\\N") ~= nil and #re.find(line.text_stripped, "\\\\N") + 1 or 1) + 5 * 2 remember("height", height) end)!{\an!alignment!\p1\pos(!remember("x", ame(function() if alignment == 7 or alignment == 1 then return 0 elseif alignment == 9 or alignment == 3 then return meta.res_x - 0 end end))!,!remember("y", ame(function() if alignment == 7 or alignment == 9 then return 10 elseif alignment == 1 or alignment == 3 then return meta.res_y - 10 end end))!)\clip(!recall.x > meta.res_x * .5 and meta.res_x - recall.width * 1.1 or 0!,!recall.y > meta.res_y * .5 and meta.res_y - recall.height - 10 or 10!,!recall.x > meta.res_x * .5 and meta.res_x or recall.width * 1.1!,!recall.y > meta.res_y * .5 and meta.res_y - 10 or recall.height + 10!)\3c&HFFFFFF&\bord!recall.width*.1!\be!recall.width*.1*.5*1.5!\1c&HFFFFFF&\fscx0\t(0,!start_fad and 500 or 1!,.4,\1c&H000000&\3c&H000000&\fscx100)\t(!$ldur - (end_fad and 500 or 0)!,!$ldur!,2,\1c&HFFFFFF&\3c&HFFFFFF&\clip(!recall.x > meta.res_x * .5 and meta.res_x or recall.width * 1.1!,!recall.y > meta.res_y * .5 and meta.res_y - recall.height - 10 or 10!,!recall.x > meta.res_x * .5 and meta.res_x or recall.width * 1.1!,!recall.y > meta.res_y * .5 and meta.res_y - 10 or recall.height + 10!))}m 0 0 l 0 !recall.height! l !recall.width*.9! !recall.height! l !recall.width*.9! 0
Comment: 0,0:00:00.00,0:00:00.00,Rx-annotation,AME,0,0,0,template line notext fxgroup RX2,!relayer(3)!{\an!alignment!\pos(!remember("x", ame(function() if alignment == 7 or alignment == 1 then return 0 elseif alignment == 9 or alignment == 3 then return meta.res_x - 0 end end))!,!remember("y", ame(function() if alignment == 7 or alignment == 9 then return 10 elseif alignment == 1 or alignment == 3 then return meta.res_y - 10 end end))!)\alpha&HFF&\1c&H000000&\blur16\t(!start_fad and 500 or 1!,!start_fad and 650 or 1!,.5,\alpha&H00&)\t(!start_fad and 500 or 1!,!start_fad and 800 or 1!,.4,\1c&HFFFFFF&\blur0)\t(!$ldur - (end_fad and 800 or 0)!,!$ldur - (end_fad and 500 or 0)!,2,\alpha&HFF&\1c&H000000&\blur16)}!orgline.text!
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— SX - effect - 正文修正特效 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— SX - JP - 日文台词 ——
Comment: 0,0:00:00.00,0:00:05.00,Sx-jp,,0,0,160,karaoke,サンプルテキスト？
Comment: 0,0:00:05.00,0:00:10.00,Sx-jp,,0,0,160,karaoke,翻訳とか適当でもいいよ」
Comment: 0,0:00:05.00,0:00:10.00,Rx-annotation,,0,0,0,karaoke,音楽とか儲からないし、歌詞とか適当でもいいよ：出自《だから僕は音楽を辞めた》。
Comment: 0,0:00:10.00,0:00:15.00,Sx-jp,,0,0,160,karaoke,「字幕とか儲からないし
Dialogue: 0,0:00:00.00,0:00:05.00,Sx-jp,fx-compare,0,0,0,,サンプルテキスト？
Dialogue: 0,0:00:05.00,0:00:10.00,Sx-jp,fx-compare,0,0,0,,翻訳とか適当でもいいよ」
Dialogue: 0,0:00:10.00,0:00:15.00,Sx-jp,fx-compare,0,0,0,,「字幕とか儲からないし
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— SX - JP - 日文台词 ——
Comment: 1,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— SX - ZH - 中文翻译 ——
Comment: 1,0:00:00.00,0:00:05.00,Sx-zh,,0,0,160,karaoke,参考{\furigana(2,sample,80)}文本？
Comment: 1,0:00:05.00,0:00:10.00,Sx-zh,,0,0,160,karaoke,「如果你只能说正确的话
Comment: 1,0:00:10.00,0:00:15.00,Sx-zh,,0,0,160,karaoke,那我们没什么好聊的」
Dialogue: 1,0:00:00.00,0:00:05.00,Sx-zh,fx-compare,0,0,0,,参考文本？
Dialogue: 1,0:00:05.00,0:00:10.00,Sx-zh,fx-compare,0,0,0,,「如果你只能说正确的话
Dialogue: 1,0:00:10.00,0:00:15.00,Sx-zh,fx-compare,0,0,0,,那我们没什么好聊的」
Comment: 1,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— SX - ZH - 中文翻译 ——
Comment: 0,0:00:00.00,0:00:00.00,Ex-invisible,,0,0,0,,—— FX - 特效生成行 ——
Dialogue: 0,0:00:00.00,0:00:04.98,Sx-jp,,43,0,160,fx,{\blur2}{\3c&H000000&}サンプルテキスト？
Dialogue: 0,0:00:04.98,0:00:09.99,Sx-jp,,22,0,160,fx,{\blur2}{\3c&H000000&}翻訳とか適当でもいいよ」
Dialogue: 2,0:00:05.00,0:00:10.00,Rx-annotation,,0,0,0,fx,{\an7\p1\pos(25,25)\1c&HFFFFFF&\bord16\blur6\fad(300,300)\fscx100}m 0 0 l 0 40 l 1332.87 40 l 1332.87 0
Dialogue: 3,0:00:05.00,0:00:10.00,Rx-annotation,,0,0,0,fx,{\an7\pos(25,25)\fad(300,300)\3a&HFF&}音楽とか儲からないし、歌詞とか適当でもいいよ：出自《だから僕は音楽を辞めた》。
Dialogue: 0,0:00:09.99,0:00:14.99,Sx-jp,,0,22,160,fx,{\blur2}{\3c&H000000&}「字幕とか儲からないし
Dialogue: 1,0:00:00.00,0:00:04.98,Sx-zh,,57,0,216,fx,{\blur2}{\3c&H000000&}参考{\furigana(2,sample,80)}文本{\alpha&HFF&}喵{\alpha}
Dialogue: 1,0:00:00.00,0:00:04.98,Sx-zh,,57,0,216,fx,{\blur2}{\3c&H000000&}{\an4\fnA-OTF Shin Maru Go Pr6N DB\fscx116\fscy128\pos(1071.03125,829)}？
Dialogue: 1,0:00:00.00,0:00:04.98,Sx-zh,,57,0,216,fx,{\blur2}{\3c&H000000&}{\an2\fs52.8\fscx82\fscy80\fsp\pos(903.359375,796)}sample
Dialogue: 1,0:00:04.98,0:00:09.99,Sx-zh,,0,28,216,fx,{\blur2}{\3c&H000000&}「如果你只能说正确的话
Dialogue: 1,0:00:09.99,0:00:14.99,Sx-zh,,28,0,216,fx,{\blur2}{\3c&H000000&}那我们没什么好聊的」
